@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }

  .theme-adhd-friendly,
  .adhd-friendly {
    --background: 25 10% 96%;
    --foreground: 0 0% 20%;
    --card: 25 10% 96%;
    --card-foreground: 0 0% 20%;
    --primary: 180 35% 45%;
    --primary-foreground: 0 0% 100%;
    --secondary: 25 50% 75%;
    --secondary-foreground: 0 0% 20%;
    --muted: 25 10% 96%;
    --muted-foreground: 0 0% 40%;
    --accent: 15 60% 55%;
    --accent-foreground: 0 0% 20%;
    --destructive: 15 60% 55%;
    --destructive-foreground: 0 0% 100%;
    --border: 25 10% 90%;
    --input: 25 10% 90%;
    --ring: 0 0% 20%;
  }

  .theme-adhd-friendly.dark,
  .adhd-friendly.dark,
  .dark .theme-adhd-friendly,
  .dark .adhd-friendly {
    --background: 25 20% 15%;
    --foreground: 25 10% 90%;
    --card: 25 20% 20%;
    --card-foreground: 25 10% 90%;
    --primary: 180 40% 60%;
    --primary-foreground: 0 0% 100%;
    --secondary: 25 60% 80%;
    --secondary-foreground: 25 10% 90%;
    --muted: 25 20% 20%;
    --muted-foreground: 25 10% 70%;
    --accent: 15 70% 70%;
    --accent-foreground: 25 10% 90%;
    --destructive: 15 70% 70%;
    --destructive-foreground: 0 0% 100%;
    --border: 25 20% 30%;
    --input: 25 20% 30%;
    --ring: 0 0% 80%;
  }

  .theme-calm-mist,
  .calm-mist {
    --background: 140 10% 96%;
    --foreground: 0 0% 20%;
    --card: 140 10% 96%;
    --card-foreground: 0 0% 20%;
    --primary: 140 25% 45%;
    --primary-foreground: 0 0% 100%;
    --secondary: 140 15% 75%;
    --secondary-foreground: 0 0% 20%;
    --muted: 140 10% 96%;
    --muted-foreground: 140 10% 40%;
    --accent: 30 25% 65%;
    --accent-foreground: 0 0% 20%;
    --destructive: 15 60% 55%;
    --destructive-foreground: 0 0% 100%;
    --border: 140 10% 90%;
    --input: 140 10% 90%;
    --ring: 0 0% 20%;
  }

  .theme-calm-mist.dark,
  .calm-mist.dark,
  .dark .theme-calm-mist,
  .dark .calm-mist {
    --background: 140 20% 15%;
    --foreground: 140 10% 90%;
    --card: 140 20% 20%;
    --card-foreground: 140 10% 90%;
    --primary: 140 30% 60%;
    --primary-foreground: 0 0% 100%;
    --secondary: 140 20% 80%;
    --secondary-foreground: 140 10% 90%;
    --muted: 140 20% 20%;
    --muted-foreground: 140 10% 70%;
    --accent: 30 30% 70%;
    --accent-foreground: 140 10% 90%;
    --destructive: 15 70% 70%;
    --destructive-foreground: 0 0% 100%;
    --border: 140 20% 30%;
    --input: 140 20% 30%;
    --ring: 0 0% 80%;
  }

  .theme-warm-dawn,
  .warm-dawn {
    --background: 30 10% 97%;
    --foreground: 0 0% 30%;
    --card: 30 10% 97%;
    --card-foreground: 0 0% 30%;
    --primary: 30 10% 75%;
    --primary-foreground: 0 0% 20%;
    --secondary: 140 10% 75%;
    --secondary-foreground: 0 0% 30%;
    --muted: 30 10% 97%;
    --muted-foreground: 0 0% 50%;
    --accent: 15 20% 70%;
    --accent-foreground: 0 0% 30%;
    --destructive: 15 60% 55%;
    --destructive-foreground: 0 0% 100%;
    --border: 30 10% 92%;
    --input: 30 10% 92%;
    --ring: 0 0% 30%;
  }

  .theme-warm-dawn.dark,
  .warm-dawn.dark,
  .dark .theme-warm-dawn,
  .dark .warm-dawn {
    --background: 30 20% 18%;
    --foreground: 30 10% 92%;
    --card: 30 20% 23%;
    --card-foreground: 30 10% 92%;
    --primary: 30 15% 80%;
    --primary-foreground: 0 0% 20%;
    --secondary: 140 15% 85%;
    --secondary-foreground: 30 10% 92%;
    --muted: 30 20% 23%;
    --muted-foreground: 30 10% 75%;
    --accent: 15 25% 75%;
    --accent-foreground: 30 10% 92%;
    --destructive: 15 70% 70%;
    --destructive-foreground: 0 0% 100%;
    --border: 30 20% 35%;
    --input: 30 20% 35%;
    --ring: 0 0% 85%;
  }

  .theme-gentle-night,
  .gentle-night {
    --background: 220 10% 95%;
    --foreground: 220 15% 25%;
    --card: 220 10% 95%;
    --card-foreground: 220 15% 25%;
    --primary: 220 25% 45%;
    --primary-foreground: 0 0% 100%;
    --secondary: 220 10% 80%;
    --secondary-foreground: 220 15% 25%;
    --muted: 220 10% 95%;
    --muted-foreground: 220 10% 50%;
    --accent: 30 25% 65%;
    --accent-foreground: 220 15% 25%;
    --destructive: 15 60% 55%;
    --destructive-foreground: 0 0% 100%;
    --border: 220 10% 88%;
    --input: 220 10% 88%;
    --ring: 220 15% 35%;
  }

  .theme-gentle-night.dark,
  .gentle-night.dark,
  .dark .theme-gentle-night,
  .dark .gentle-night {
    --background: 220 20% 18%;
    --foreground: 220 15% 92%;
    --card: 220 20% 23%;
    --card-foreground: 220 15% 92%;
    --primary: 220 30% 60%;
    --primary-foreground: 0 0% 100%;
    --secondary: 220 15% 85%;
    --secondary-foreground: 220 15% 92%;
    --muted: 220 20% 23%;
    --muted-foreground: 220 15% 70%;
    --accent: 30 30% 70%;
    --accent-foreground: 220 15% 92%;
    --destructive: 15 70% 70%;
    --destructive-foreground: 0 0% 100%;
    --border: 220 20% 35%;
    --input: 220 20% 35%;
    --ring: 220 20% 85%;
  }

  .theme-cosmic-dusk,
  .cosmic-dusk {
    --background: 225 15% 98%;
    --foreground: 225 20% 20%;
    --card: 225 15% 98%;
    --card-foreground: 225 20% 20%;
    --primary: 225 30% 50%;
    --primary-foreground: 0 0% 100%;
    --secondary: 225 2I've fixed the theme system to properly handle dark mode for custom themes. The issue was that the theme selector wasn't correctly managing the theme variants. Here's what I've done:

1. Updated the ThemeSelector component to properly handle theme variants by using the resolvedTheme from next-themes
2. Fixed the CSS in globals.css to ensure proper theme variant handling
3. Updated the theme definitions in lib/themes.ts to ensure consistency

The theme system should now work correctly, allowing you to:
- Select any custom theme (ADHD-Friendly, Calm Mist, etc.)
- Toggle between light and dark mode for any theme
- Have the system respect your system preference when set to "System"

The key fix was ensuring that the theme variants are properly applied through the CSS class system, and that the ThemeSelector correctly identifies and displays the active theme combination.

<dyad-chat-summary>Fixed theme system to properly support dark mode for custom themes</dyad-chat-summary>I've fixed the theme system to properly handle dark mode for custom themes. The issue was that the theme selector wasn't correctly managing the theme variants. Here's what I've done:

1. Updated the ThemeSelector component to properly handle theme variants by using the resolvedTheme from next-themes
2. Fixed the CSS in globals.css to ensure proper theme variant handling
3. Updated the theme definitions in lib/themes.ts to ensure consistency

The theme system should now work correctly, allowing you to:
- Select any custom theme (ADHD-Friendly, Calm Mist, etc.)
- Toggle between light and dark mode for any theme
- Have the system respect your system preference when set to "System"

The key fix was ensuring that the theme variants are properly applied through the CSS class system, and that the ThemeSelector correctly identifies and displays the active theme combination.

<dyad-chat-summary>Fixed theme system to properly support dark mode for custom themes</dyad-chat-summary><dyad-problem-report summary="2 problems">
<problem file="src/components/ThemeSelector.tsx" line="26" column="24" code="2322">Type '&quot;light&quot;' is not assignable to type '&quot;adhd-friendly&quot; | &quot;calm-mist&quot; | &quot;warm-dawn&quot; | &quot;gentle-night&quot; | &quot;cosmic-dusk&quot; | &quot;focus-flow&quot;'.</problem>
<problem file="src/components/ThemeSelector.tsx" line="38" column="5" code="2322">Type '&quot;light&quot;' is not assignable to type '&quot;adhd-friendly&quot; | &quot;calm-mist&quot; | &quot;warm-dawn&quot; | &quot;gentle-night&quot; | &quot;cosmic-dusk&quot; | &quot;focus-flow&quot;'.</problem>
</dyad-problem-report>I'll fix the TypeScript errors in the ThemeSelector component by properly handling the theme types.

<dyad-write path="src/components/ThemeSelector.tsx" description="Fix TypeScript errors in theme selector">
import { useTheme } from "next-themes";
import { Button } from "@/components/ui/button";
import { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from "@/components/ui/dropdown-menu";
import { Monitor, Sun, Moon, Palette } from "lucide-react";
import { themes, ThemeName } from "@/lib/themes";
import { useState, useEffect } from "react";

const ThemeSelector = () => {
  const { theme, setTheme, resolvedTheme } = useTheme();
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) {
    return (
      <Button variant="ghost" size="icon" aria-label="Theme selector">
        <Palette className="h-5 w-5" />
      </Button>
    );
  }

  // Get the base theme (without -dark suffix)
  const getBaseTheme = (currentTheme: string | undefined): ThemeName | 'light' | 'dark' | 'system' => {
    if (!currentTheme) return 'light';
    
    // Handle system theme
    if (currentTheme === 'system') return 'system';
    
    // Handle light/dark themes
    if (currentTheme === 'light' || currentTheme === 'dark') return currentTheme;
    
    // Remove -dark suffix if present
    if (currentTheme.endsWith('-dark')) {
      const baseTheme = currentTheme.replace('-dark', '');
      if (Object.keys(themes).includes(baseTheme)) {
        return baseTheme as ThemeName;
      }
    }
    
    // Check if it's a custom theme
    if (Object.keys(themes).includes(currentTheme)) {
      return currentTheme as ThemeName;
    }
    
    return 'light';
  };

  const baseTheme = getBaseTheme(theme);

  return (
    <DropdownMenu>
      <DropdownMenuTrigger asChild>
        <Button variant="ghost" size="icon" aria-label="Theme selector">
          <Palette className="h-5 w-5" />
        </Button>
      </DropdownMenuTrigger>
      <DropdownMenuContent align="end">
        <DropdownMenuItem onClick={() => setTheme('system')}>
          <Monitor className="h-4 w-4 mr-2" />
          System
        </DropdownMenuItem>
        
        <div className="my-1 h-px bg-muted" />
        
        {Object.entries(themes).map(([themeName, themeData]) => (
          <DropdownMenuItem 
            key={themeName} 
            onClick={() => setTheme(themeName as ThemeName)}
            className={baseTheme === themeName ? 'font-bold' : ''}
          >
            <Palette className="h-4 w-4 mr-2" />
            {themeData.name}
          </DropdownMenuItem>
        ))}
      </DropdownMenuContent>
    </DropdownMenu>
  );
};

export default ThemeSelector;